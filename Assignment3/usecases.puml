@startuml
Project <-up- Team : associated <
Team <- ProjectManager : leads <
Project <- ProjectManager : manages <
Project -down-> System : produce(Requirments) >
Developer -> Team : 0..* 
(System, Project) .. Requirements



class Project {
    name : String
    startDate : Date
    endDate : Date
}

class System {
    percentage : Int
    description : String
}

class Requirements {
    percentage : Int
    description : String
}

class ProjectManager {
    name : String
    telephone : Int
    team : String
}
ProjectManager : startproject(Project)
ProjectManager : Terminate(Project) 

@enduml

Exercise 3 UML
@startuml
hide empty description

[*] -right-> checkoutv3
checkoutv3 -right-> setupdotnetv2
setupdotnetv2 -right-> restore
restore -right-> build
build -right-> test
test -right-> [*]

@enduml

//Exercise 4 first UML
@startuml
hide empty description

[*] --> Unmodified : Clone
Unmodified --> Modified : Edit
Modified --> Staged : Add
Staged --> Unmodified : Commit

@enduml

Exercise 4 second UML
@startuml
hide empty description

[*] --> Untracked : Create file
Untracked --> Staged : Add
Staged --> Unmodified : Commit
Unmodified --> Modified : Edit
Modified --> Staged : Add

@enduml

@startuml
actor Actor
alt
Actor -> Button: dial phone number
activate Actor
activate Button
Button -> ButtonDialerAdapter: 1 *buttonPressed
deactivate Button

activate ButtonDialerAdapter
ButtonDialerAdapter -> Dialer: 1.1 digit(n)
deactivate ButtonDialerAdapter

activate Dialer
Dialer -> Speaker: 1.1.2 tone(n)

activate Speaker
Speaker --> Actor: Make noise
deactivate Speaker

Dialer -> Screen: 1.1.1 displayDigit(n)
deactivate Dialer

activate Screen
Screen --> Actor: feedback
deactivate Screen

else

Actor -> Button: press send button
activate Button
Button -> SendButtonDialerAdapter: 2 buttonPressed
deactivate Button

activate SendButtonDialerAdapter
SendButtonDialerAdapter -> Dialer: 2.1 Send
deactivate SendButtonDialerAdapter

activate Dialer
Dialer -> Radio: 2.1.1 connect(pno)
deactivate Dialer

activate Radio
Radio -> Screen: A1 inUse
deactivate Radio

activate Screen
Screen --> Actor: feedback
deactivate Screen
deactivate Actor
end
@enduml

@startuml

class User << (S,#FF7700) Singleton >>{
  int UID
  int currentSessionPatientID
}

class PatientInfo {
  int PID
  Summary summary
  updateInfo()
  updateSummary()
}

class Mentcare {
  string updatePRS(UID)
  string summarize(UID)
}

class Authorization {
  bool authorize(TF, UID)
}

class PRS {
  bool update(PID)
}

@enduml